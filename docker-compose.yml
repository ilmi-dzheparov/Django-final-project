# Задаём имя проекта
name: megano-test2

services:
    web:
        # Указываем директорию в которой содержится Dockerfile для сборки образа
        build:
            dockerfile: Dockerfile
        # Запускаем встроенный сервер Django
        command: >
            sh -c "
            ls megano && gunicorn megano.wsgi:application --bind 0.0.0.0:8001
            "
        volumes:
            - ./src:/app
        # Пробрасываем 8000 порт контейнера на 8000 порт локалхоста(127.0.0.1:8001)
        ports:
            - 127.0.0.1:8001:8001
        # Файл содержащий переменные окружения для контейнера
        env_file:
            - .env
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASS}
        # Дожидаемся запуска контейнера db
        depends_on:
            - db

    redis:
        image: "redis:alpine"
        container_name: redis2
        ports:
            - "6379:6379"

    db:
        # Берём образ БД PostgreSQL версии 16
        image: postgres:16
        # Примонтируем том postgres-data к директории /var/lib/postgresql/data контейнера db
        volumes:
            - postgres-data:/var/lib/postgresql/data
        # Файл содержащий переменные окружения для контейнера
        env_file:
            - .env
        # Используем значения переменных окружения из .env файла
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASS}
        # Проверяем готовность сервера и пробуем перезапустить в случае неудачи.
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
            interval: 30s
            timeout: 10s
            retries: 5
        restart: unless-stopped
        tty: true
        stdin_open: true

    celery:
        build:
            dockerfile: Dockerfile
        command: celery -A megano worker --loglevel=info
        volumes:
            - ./src:/app
        env_file:
            - .env
        depends_on:
            - db
            - redis

    celery-beat:
        build:
            dockerfile: Dockerfile
        command: celery -A megano beat --loglevel=info
        volumes:
            - ./src:/app
        env_file:
            - .env
        depends_on:
            - db
            - redis

volumes:
    # Объявляем том postgres-data для хранения данных PostgreSQL
    postgres-data:
